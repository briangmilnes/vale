/*

  This demonstrates x64 callee save using push and pop of r64 registers.
  Brian Milnes 31 Aug 2017

*/

/* 
  Vale seems to be using the following calling conventions:

  https://en.wikipedia.org/wiki/X86_calling_conventions#List_of_x86_calling_conventions

  Arch  OS       Convention                            Arguments                                 Caller saved
  x86
     Linux      cdecl                                 arguments on the stack                  EAX, ECX, and EDX
     Windows    cdecl?stdcall                         arguments on the stack                        ?
  x64 
     Linux      System V AMD64 ABI                    RDI, RSI, RDX, RCX, R8, R9, XMM0â€“7            ?
     Windows    Microsoft x64 calling convention      RCX/XMM0, RDX/XMM1, R8/XMM2, R9/XMM3          ?
 
  But see below, GCC is acatually giving us: rax; rsi; rdx; rcx; r10; r9; rdi; r8;
*/

include "../../arch/x64/decls.vad"
include "../../arch/x64/decls64.vad"
include{:verbatim} "../../arch/x64/print.s.dfy"
include{:verbatim} "../../lib/util/dafny_wrappers.i.dfy"

#verbatim
module CalleeSaveRestore {

import opened x64_def_s
import opened x64_vale_i
import opened x64_print_s
import opened dafny_wrappers_i
import opened x64_decls_i
import opened x64_decls64_i

#endverbatim

#verbatim
predicate HasFrames(s: Stack, n : int) {
 |s| == n         
}         
#endverbatim

procedure {:refined} {:bridge} CalleeSaveRestore()
   requires HasFrames(stack, 1);
   modifies rax; rsi; rdx; rcx; r10; r9; rdi; r8; efl; stack;
{
  assert HasFrames(stack, 1);
  // Save the registers.
  PUSH(rax); PUSH(rsi); PUSH(rdx); PUSH(rcx); PUSH(r10); PUSH(r9); PUSH(rdi); PUSH(r8);  
  assert HasFrames(stack, 9);
  // Zero them. 
  Xor64(rax,rax); Xor64(rsi,rsi); Xor64(rdx,rdx); Xor64(rcx,rcx); Xor64(r10,r10); Xor64(r9,r9); Xor64(rdi,rdi); Xor64(r8,r8);  
  assert HasFrames(stack, 9);
  // Restore them.
  POP(r8); POP(rdi); POP(r9); POP(r10); POP(rcx); POP(rdx); POP(rsi); POP(rax);
  assert HasFrames(stack, 1);
  // Now C tests that the pointers point to the old values correctly.
} 

#verbatim
}
#endverbatim  
